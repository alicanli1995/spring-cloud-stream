version: "3.9"

networks:
  microservice-net:
    name: microservice-net
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper
    networks:
      - microservice-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: unless-stopped
    networks:
      - microservice-net
    ports:
      - "9092:9092"
    volumes:
      - "./data/kafka_data:/bitnami"
      - "./kafka/kafka-init.sh:/docker-entrypoint-initdb.d/kafka-init.sh"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:29092,EXTERNAL://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_SCHEMA_REGISTRY_URL=schemaregistry:8085
    depends_on:
      - zookeeper


  schemaregistry:
    image: confluentinc/cp-schema-registry:6.2.0
    restart: always
    networks:
      - microservice-net
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
    ports:
      - 8085:8085
      
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    networks:
      - microservice-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      SCHEMAREGISTRY_CONNECT: http://schemaregistry:8085
    depends_on:
      - "kafka"